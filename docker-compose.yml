version: '3'

services:
  corona_scraping:
    build: ./CoronaScraping
    image: corona_scraping
    container_name: corona_scraping
    command: >
      /bin/bash -c "python ./main.py"
    volumes:
      - ./CoronaScraping/:/usr/src/app
    depends_on:
      - db_python_manager
    networks:
      - main_net

  db:
    image: postgres:alpine
    container_name: corona_db
    volumes:
      - ./postgres_data:/var/lib/postgresql

#      - pgdata:/var/lib/postgresql/data
#      - pgconf:/etc/postgresql
#      - pglog:/var/log/postgresql
    ports:
    - 5431:5432
    networks:
      - main_net
    environment:
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata



  db_python_manager:
    build: ./db_python_manager
    image: corona_db_manager
    container_name: corona_db_manager
    command: >
      /bin/bash -c "python ./main.py"
    volumes:
    - ./db_python_manager/:/usr/scr/app
    ports:
      - "5000:5000"
    depends_on:
      - db
    networks:
      - main_net

  dashboard:
    build: ./dashboard
    image: corona_dashboard
    container_name: corona_dashboard
    command: >
      /bin/bash -c "gunicorn -b 0.0.0.0:8050 wsgi:server"
    depends_on:a
      - db_python_manager
    ports:
      - "8050:8050"
    networks:
      - main_net

  django:
    build: ./backend
    image: corona_webapp
    container_name: corona_webapp
    command: >
      /bin/bash -c "gunicorn -b 0.0.0.0:8000 backend.wsgi"
    depends_on:
      - dashboard
    ports:
      - "8000:8000"
    networks:
      - main_net

networks:
  main_net:

#volumes:
#  pgdata:
#    driver: local
#  pgconf:
#    driver: local
#  pglog:
#    driver: local